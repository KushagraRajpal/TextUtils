{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","style","backgroundColor","color","placeholder","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","split","join","length","endsWith","defaultProps","aboutText","Alert","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e513cb3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\" : \"light\"} m-3`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              style={{ backgroundColor: props.mode === 'dark' ? \"black\" : \"white\", color: props.mode === 'dark' ? \"white\" : \"black\" }}\r\n\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = { title: \"set title here\", aboutText: \"About text here\" };\r\n","import React, {useState} from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log('Upper case clicked' + text);\r\n        let newText  = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper Case\", \"success\");\r\n    }\r\n    const handleLowClick = () => {\r\n        // console.log('Upper case clicked' + text);\r\n        let newText  = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower Case\", \"success\");\r\n    }\r\n    const handleClear = () => {\r\n        let newText  = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text has been cleared\", \"success\");\r\n    }\r\n    const handleSentence = () => {\r\n        let newText  = text.charAt(0).toUpperCase()+text.slice(1).toLowerCase()\r\n      // let cap = text.split(/\\s+/).map(newText).join(' ')\r\n      props.showAlert(\"Switched to sentence Case\", \"success\");\r\n        setText(newText);\r\n    }\r\n    const handleCopy = () => {\r\n      let text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text has been copied to clipboard\", \"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Space addjusted\", \"success\");\r\n      // let newText = text.trim()\r\n      // setText(newText)\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log('Upper case clicked');\r\n        setText(event.target.value)\r\n    }\r\n    \r\n    const [text, setText] = useState('');\r\n    //   text = \"new text\" // Wrong way to change the state\r\n        // setText(\"new text\") // correct way to change the state\r\n  return (\r\n  <>\r\n    <div className = \"container\"   style = {{color : props.mode === 'dark'? \"white\":\"black\"  }}>\r\n        <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          style = {{backgroundColor : props.mode === 'dark'? \"black\":\"white\",color : props.mode === 'dark'? \"white\":\"black\"  }}\r\n          rows=\"8\"\r\n          value = {text}\r\n          onChange = {handleOnChange}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary m-3\" onClick = {handleUpClick}>Convert to uppercase</button>\r\n      <button className=\"btn btn-primary m-3\" onClick = {handleLowClick}>Convert to lowercase</button>\r\n      <button className=\"btn btn-primary m-3\" onClick = {handleClear}>Clear Text</button>\r\n      <button className=\"btn btn-primary m-3\" onClick = {handleSentence}>Sentence Case</button>\r\n      <button className=\"btn btn-primary m-3\" onClick = {handleCopy}>Copy to Clipboard</button>\r\n      <button className=\"btn btn-primary m-3\" onClick = {handleExtraSpaces}>Remove Extra Space</button>\r\n      \r\n    </div>\r\n    <div className=\"container my-3\"  style = {{color : props.mode === 'dark'? \"white\":\"black\"  }}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.length>0?(text.endsWith('')?text.split(\" \").length-1: text.split('').length):0} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} </p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in the textbox to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    \r\n        props.alert &&\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n         <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        \r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import { \n//   BrowserRouter as Router, \n//   Switch,\n//   Route,\n//   // Link \n//   } from 'react-router-dom'\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // weather dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n  }\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode ('dark') \n      document.body.style.backgroundColor = 'black'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils - Dark jijkjjd Mode';\n      // }, 1000);\n      // setInterval(() => {\n      //   document.title = 'TextUtils - light jijkjjd Mode';\n      // }, 1000);\n    }else{\n      setMode ('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Light Mode';\n    }\n    \n  }\n\n  return (\n    <>\n        {/* <Router> */}\n      <Navbar title= \"TextUtils\" aboutText = \"About Us\" mode = {mode} toggleMode = {toggleMode}/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n      {/* <Route exact path=\"/\"> */}\n      <TextForm showAlert = {showAlert} heading = \"Enter the text to analyze below\" mode = {mode}/>\n        {/* </Route> */}\n        {/* <Route  exact path=\"/about\" mode ={mode}> */}\n          {/* <About/>         */}\n        {/* </Route> */}\n      {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}