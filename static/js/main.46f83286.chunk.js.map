{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","style","backgroundColor","color","placeholder","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","charAt","slice","words","split","capitalizedWords","forEach","element","push","join","navigator","clipboard","writeText","filter","defaultProps","aboutText","Alert","height","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46f83286.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n\r\n              <a className=\"nav-link \" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\" : \"light\"} m-3`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              style={{ backgroundColor: props.mode === 'dark' ? \"black\" : \"white\", color: props.mode === 'dark' ? \"white\" : \"black\" }}\r\n\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = { title: \"set title here\", aboutText: \"About text here\" };","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case\", \"success\");\r\n  }\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case\", \"success\");\r\n  }\r\n  const handleClear = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text has been cleared\", \"success\");\r\n  }\r\n  const handleSentence = () => {\r\n    let newText = text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()\r\n    props.showAlert(\"Switched to sentence Case\", \"success\");\r\n    setText(newText);\r\n  }\r\n  const handleCapitalize = () => {\r\n    let words = text.split(' ')\r\n    let capitalizedWords = [];\r\n    words.forEach(element => {\r\n      capitalizedWords.push(element[0].toUpperCase() + element.slice(1, element.length));\r\n      let newText = capitalizedWords.join(' ');\r\n      props.showAlert('switched to capitalise state', 'success')\r\n      setText(newText)\r\n    })\r\n  }\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text has been copied to clipboard\", \"success\");\r\n  }\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Space addjusted\", \"success\");\r\n  }\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? \"white\" : \"black\" }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            style={{ backgroundColor: props.mode === 'dark' ? \"black\" : \"white\", color: props.mode === 'dark' ? \"white\" : \"black\" }}\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary m-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary m-1\" onClick={handleLowClick}>Convert to lowercase</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary m-1\" onClick={handleClear}>Clear Text</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary m-1\" onClick={handleSentence}>Sentence Case</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary m-1\" onClick={handleCapitalize}>Capitatise Case</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary m-1\" onClick={handleCopy}>Copy to Clipboard</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary m-1\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n\r\n      </div>\r\n      <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? \"white\" : \"black\" }}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n        <p>You will read this in {0.008 * text.split(\" \").filter((element) => { return element.length !== 0 }).length} Minutes</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to Preview!\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    <div style={{ height: '50px' }}>\r\n      {props.alert &&\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n\r\n        </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // weather dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'black'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading=\"TextUtils - Word Counter, Character Counter, Remove Extra Spaces \" mode={mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}